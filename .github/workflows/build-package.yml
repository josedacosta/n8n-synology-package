name: Build Synology Package

on:
  push:
    branches: [ main, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  shellcheck:
    name: Shell Script Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          scandir: './package/scripts'
          severity: error
          format: gcc

  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: shellcheck

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check version consistency
        run: yarn check:versions

      - name: Build package structure
        run: yarn build

      - name: Create .spk package
        run: yarn package

      - name: List generated files
        run: |
          echo "Generated .spk files:"
          ls -lh dist/*.spk
          echo ""
          echo "Checksums:"
          if [ -f dist/*.md5 ]; then cat dist/*.md5; fi
          if [ -f dist/*.sha256 ]; then cat dist/*.sha256; fi

      - name: Upload .spk artifact
        uses: actions/upload-artifact@v4
        with:
          name: n8n-synology-package
          path: |
            dist/*.spk
            dist/*.md5
            dist/*.sha256
          retention-days: 30

      - name: Upload build directory for debugging
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-directory
          path: dist/build/
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: n8n-synology-package
          path: dist/

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: n8n Synology Package v${{ steps.get_version.outputs.VERSION }}
          body: |
            ## n8n Synology Package v${{ steps.get_version.outputs.VERSION }}

            ### Installation Instructions

            1. Download the `.spk` file below
            2. Open Synology DSM Package Center
            3. Click "Manual Install"
            4. Select the downloaded `.spk` file
            5. Follow the installation wizard

            ### Requirements

            - Synology DSM 7.0 or higher
            - Container Manager installed
            - Minimum 2GB RAM (4GB recommended)
            - Port 5678 available

            ### What's Included

            - n8n (latest version)
            - PostgreSQL 17
            - Automated backup system
            - Reverse proxy configuration example

            ### Documentation

            - [README.md](https://github.com/josedacosta/n8n-synology-package/blob/main/README.md)
            - [Installation Guide](https://github.com/josedacosta/n8n-synology-package/blob/main/INSTALLATION-DOCKER.md)

            ### Checksums

            See attached `.md5` and `.sha256` files for verification.
          files: |
            dist/*.spk
            dist/*.md5
            dist/*.sha256
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}